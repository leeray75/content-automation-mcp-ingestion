{
  "id": "content-automation-mcp-ingestion",
  "name": "Content Automation MCP Ingestion Server",
  "description": "MCP server for content ingestion with validation and processing capabilities",
  "version": "0.1.0",
  "author": "Content Automation Platform",
  "license": "MIT",
  "homepage": "https://github.com/leeray75/content-automation-mcp-ingestion",
  "repository": {
    "type": "git",
    "url": "https://github.com/leeray75/content-automation-mcp-ingestion.git"
  },
  "capabilities": {
    "tools": [
      {
        "name": "ingest_content",
        "description": "Ingest and validate content (articles, ads, landing pages)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "content": {
              "type": "object",
              "description": "The content to ingest (article, ad, or landing page)"
            },
            "contentType": {
              "type": "string",
              "enum": ["article", "ad", "landingPage"],
              "description": "Optional content type hint"
            },
            "metadata": {
              "type": "object",
              "description": "Optional metadata for the content"
            }
          },
          "required": ["content"]
        }
      },
      {
        "name": "get_ingestion_stats",
        "description": "Get ingestion service statistics",
        "inputSchema": {
          "type": "object",
          "properties": {}
        }
      }
    ],
    "resources": [
      {
        "name": "ingestion_status",
        "description": "Get status of ingested content items",
        "uri": "ingestion://status"
      },
      {
        "name": "ingestion_records",
        "description": "Get ingested content records",
        "uri": "ingestion://records"
      }
    ]
  },
  "transport": {
    "stdio": {
      "command": "node",
      "args": ["build/index.js"]
    },
    "http": {
      "url": "http://localhost:3001/mcp",
      "endpoints": {
        "health": "/health",
        "initialize": "/mcp"
      }
    }
  },
  "environment": {
    "required": [],
    "optional": [
      "PORT",
      "LOG_LEVEL",
      "STORAGE_PATH",
      "NODE_ENV"
    ]
  }
}
